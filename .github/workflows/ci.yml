name: CI & CD (Docker -> Local)

on:
  push:
    branches: [ "main" ]
  pull_request:

env:
  IMAGE_NAME: ${{ secrets.DOCKER_USERNAME }}/cicd-docker-local

jobs:
  test:
    name: Run unit tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Use Node.js 20
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
      - name: Install deps
        run: npm install
      - name: Run tests
        run: npm test

  build_and_push:
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    needs: test
    name: Build & push Docker image
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Build image
        run: |
          docker build -t $IMAGE_NAME:latest -t $IMAGE_NAME:${{ github.sha }} .
      - name: Push image
        run: |
          docker push $IMAGE_NAME:latest
          docker push $IMAGE_NAME:${{ github.sha }}

  deploy_compose:
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    needs: build_and_push
    name: Deploy on local VM via Docker Compose
    runs-on: [ self-hosted ]
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Substitute Docker Hub username in compose file
        shell: cmd
        run: powershell -Command "(Get-Content docker-compose.yml) -replace 'DOCKER_USERNAME', '${{ secrets.DOCKER_USERNAME }}' | Set-Content docker-compose.yml"

      - name: Cleanup old containers
        shell: cmd
        run: |
          docker rm -f alertmanager || true
          docker rm -f prometheus || true

      - name: Pull & start containers
        run: |
          docker compose pull
          docker compose up -d

      - name: Verify health
        shell: cmd
        run: |
          timeout /t 5
          curl -f http://localhost:3000/health
          echo App is healthy
